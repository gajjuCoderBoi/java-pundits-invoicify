plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.2.0"
}

group = 'com.cognizant'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    implementation "org.mapstruct:mapstruct:1.4.2.Final"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    implementation group: 'org.sonarsource.scanner.maven', name: 'sonar-maven-plugin', version: '3.9.0.2155'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    jacoco {
        excludes += ["**/dto/**","**/entity/**", "**/mapper/**", "**/response/**", "**/util/**", "**/misc/**", "**/config/**"]
    }
}

asciidoctor {
    attributes 'snippets': snippetsDir
    dependsOn test
}

task copyConfig(type: Copy) {
    from file("${projectDir}/conf.yml")
    into file("${buildDir}/resources/main")
    rename 'conf.yml', 'application-dev.yml'
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    dependsOn copyConfig
    archiveFileName = "invoicify.jar"
    destinationDirectory = file("$projectDir/target")
}
jacoco {
    toolVersion = "0.8.6"
}

jacocoTestReport {
    reports {
        dependsOn test
        xml.enabled true
        csv.enabled true
        csv.destination layout.buildDirectory.dir('coverage/reports/jacocoCsv.csv').get().asFile
        xml.destination layout.buildDirectory.dir('coverage/reports/jacocoXml.xml').get().asFile
        html.destination layout.buildDirectory.dir('coverage/reports/jacocoHtml').get().asFile

    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            'com/cognizant/javapunditsinvoicify/entity',
                            'com/cognizant/javapunditsinvoicify/dto',
                            'com/cognizant/javapunditsinvoicify/mapper',
                            'com/cognizant/javapunditsinvoicify/response',
                            'com/cognizant/javapunditsinvoicify/util',
                            'com/cognizant/javapunditsinvoicify/misc',
                            'com/cognizant/javapunditsinvoicify/config'
                    ]
            )
        }))
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}

